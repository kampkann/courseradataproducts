xyplot()
require(stats)
histogram( ~ height | voice.part, data = singer, nint = 17,
endpoints = c(59.5, 76.5), layout = c(2,4), aspect = 1,
xlab = "Height (inches)")
install.packages("lattice")
histogram( ~ height | voice.part, data = singer, nint = 17,
endpoints = c(59.5, 76.5), layout = c(2,4), aspect = 1,
xlab = "Height (inches)")
require(lattice)
histogram( ~ height | voice.part, data = singer, nint = 17,
endpoints = c(59.5, 76.5), layout = c(2,4), aspect = 1,
xlab = "Height (inches)")
install.packages("ggplot")
install.packages("latticeExtra")
install.packages("ggplot2")
xyplot()
require(lattice)
xyplot()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
? xyplot
require(rCharts)
haireye=as.data.frame(HairEyeColor)
require(rCharts)
haireye=as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group= 'Eye', type='multiBarChart', data=subset(haireye, Sex='Male'))
n1$save('n1.html', cdn=TRUE)
cat('<iframe src="n1.html" width=100%, height=600></iframe>')
n1 <- nPlot(Freq ~ Hair, group= 'Eye', type='multiBarChart', data=subset(haireye, Sex='Male'))
n1$save('n1.html', cdn=TRUE)
n1$save('n1.html', cdn=TRUE)
shiny::runApp('C:/Users/TEMP/Desktop/coursera/DATAPRODUCTS')
n1 <- nPlot(Freq ~ Hair, group= 'Eye', type='multiBarChart', data=subset(haireye, Sex='Male'))
require(rCharts)
haireye=as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group= 'Eye', type='multiBarChart', data=subset(haireye, Sex='Male'))
n1$save('fig/n1.html', cdn=TRUE)
n1$save('n1.html', cdn=TRUE)
n1$save('fig/n1.html', cdn=TRUE)
cat('<iframe src="fig/n1.html" width=100%, height=600></iframe>')
install.packages()
install.packages("slidify")
library(devtools)
install()
install.github('slidify')
install_github('slidify', 'ramnathv')
require(rCharts)
haireye=as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group= 'Eye', type='multiBarChart', data=subset(haireye, Sex='Male'))
n1$save('fig/n1.html', cdn=TRUE)
n1$save('n1.html', cdn=TRUE)
cat('<iframe src="n1.html" width=100%, height=600></iframe>')
n1 <- nPlot(Freq ~ Hair, group= 'Eye', type='multiBarChart', data=subset(haireye, Sex='Male'))
n1$save('k:n1.html', cdn=TRUE)
cat('<iframe src="k:n1.html" width=100%, height=600></iframe>')
n1$save('k:/n1.html', cdn=TRUE)
cat('<iframe src="k:/n1.html" width=100%, height=600></iframe>')
n1 <- nPlot(Freq ~ Hair, group= 'Eye', type='multiBarChart', data=subset(haireye, Sex='Male'))
n1$save('k:/n1.html', cdn=TRUE)
cat('<iframe src="k:/n1.html" width=100%, height=600></iframe>')
n1 <- nPlot(Freq ~ Hair, group= 'Eye', type='multiBarChart', data=subset(haireye, Sex='Male'))
n1$save('k:/tmp/n1.html', cdn=TRUE)
cat('<iframe src="k:/tmp/n1.html" width=100%, height=600></iframe>')
require(slidify)
cat('<iframe src="k:/tmp/n1.html" width=100%, height=600></iframe>')
nPlot(Freq ~ Hair, group= 'Eye', type='multiBarChart', data=subset(haireye, Sex='Male'))
nPlot(Freq ~ Hair, group= 'Eye', type='multiBarChart', data=subset(haireye, Sex='Male'))
lm
getClass("numeric")
setGeneric("testFun", function(x)standardGeneric("testFun"))
setMethod("testFun", "numeric", function(x)x+1)
hasMethod("testFun", "numeric")
getMethod("testFun")
getMethod(TestFun)
getMethod(f, signature=character(), where, optional = FALSE,
mlist, fdef)
install_packages("yhat")
install_packages("yaht")
install.packages("yaht")
install.packages("yhat")
require(yhat)
model.load()
# read the data parking citations
df.parking <- read.csv("K:/COURSERA/DATAPROD/Parking_Citations.csv")
x <- as.numeric(sub("([.])|[[:punct:]]", '', df.parking$violFine))
df.parking$violFine <- x
par(bg=NA)
barplot( df.parking$violFine,
,names.arg=df.parking$expmm
,cex.axis = 1
,cex.names = .4
,cex.lab = 1.5
,main=" Top 10 harmful strom events "               # Main heading
,xlab="EVENTS"                                      # x label
,ylab="Casuality count"                             # y label
)
barplot( df.parking$violFine,
,names.arg=df.parking$expmm
,cex.axis = 1
,cex.names = .4
,cex.lab = 1.5
,main=" Top 10 harmful strom events "               # Main heading
,xlab="EVENTS"                                      # x label
,ylab="Casuality count"                             # y label
)
install.packages(c("boot", "class", "cluster", "codetools", "colorspace", "data.table", "DBI", "devtools", "digest", "evaluate", "foreign", "formatR", "Formula", "ggplot2", "googleVis", "gsubfn", "Hmisc", "KernSmooth", "MASS", "Matrix", "RColorBrewer", "Rcpp", "RCurl", "RMySQL", "RSQLite", "UsingR", "XML"))
install.packages(c("boot", "class", "cluster", "codetools", "colorspace",
setwd("K:/COURSERA/DP/Scrapbook")
install_github('slidify', 'ramnathv')
install(devtools)
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
setwd("K:/COURSERA/DP/Scrapbook")
setwd("K:/COURSERA/DP/Scrapbook/slidifytest")
author("first_deck")
author("test")
slidify('index.Rmd')
